@import "~seek-style-guide/theme";

@keyframes loading {
  to { width: $grid-gutter-width; }
}

@mixin buttonState($event, $type, $value) {
  @if($event == 'hover') {
    &:hover,
    &.rootHover {
      #{$type}: #{$value};

    }
  }
  @else if($event == 'active') {
    &:active,
    &.rootActive {
      #{$type}: #{$value};
    }
  }
  @else if($event == 'focus') {
    &:focus,
    &.rootFocus {
      #{$type}: #{$value};
    }
  }
}

@mixin buttonColor($color, $background-color) {
  color: $color;
  background-color: $background-color;
  @include buttonState('hover', 'background-color', lighten($background-color, 5%));
  @include buttonState('active', 'background-color', darken($background-color, 5%));
}

@mixin ghostColor($color) {
  border-color: $color;
  color: $color;
  @include buttonState('hover', 'background-color', lighten($color, 56%));
  @include buttonState('active', 'background-color', lighten($color, 51%));
  @include buttonState('focus', 'background-color', lighten($color, 51%));
}

.root {
  @include touchableText();
  font-weight: $dna-medium;
  display: inline-block;
  text-decoration: none;
  user-select: none;
  text-align: center;
  padding: 0 $grid-gutter-width;
  box-shadow: 0 1px fade($dna-black, 70%);
  border: 0;
  border-radius: 2px;
  transition:
    background-color 0.2s,
    transform 0.2s cubic-bezier(0.02, 1.505, 0.745, 1.235);
  cursor: pointer;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  @include buttonState('active', 'box-shadow', 'none');
  @include buttonState('active', 'outline', 'none');
  @include buttonState('active', 'transform', scale(0.95));
  &:focus,
  &.rootFocus {
    @include focus();
  }
}

.root_isPink {
  @include buttonColor($dna-white, $dna-pink);
}

.root_isBlue {
  @include buttonColor($dna-white, $dna-highlight);
}

.root_isGray {
  @include buttonColor($dna-black, $dna-mid-gray-light);
}

.root_isGhost,
.root_isTransparent {
  font-weight: $dna-regular;
  background-color: transparent;
  box-shadow: none;
}

.root_isGhost {
  $border-width: 2px;
  border: $border-width solid;
  font-weight: $dna-bold;
  line-height: $touchableTextHeight - ($border-width * 2);
}

.root_isBlue.root_isGhost {
  @include ghostColor($dna-link);
}

.root_isWhite.root_isGhost {
  border-color: $dna-white;
  color: $dna-white;
  @include buttonState('active', 'background-color', 'rgba(255, 255, 255, 0.2)');
  @include buttonState('hover', 'background-color', 'rgba(255, 255, 255, 0.2)');
  @include buttonState('focus', 'background-color', 'rgba(255, 255, 255, 0.2)');

}

.root_isTransparent {
  color: $dna-link;
  padding-left: 0;
  padding-right: 0;
  @include buttonState('hover', 'text-decoration', 'underline');
  @include buttonState('active', 'transform', 'none');
  @media #{$desktop} {
    @include touchableText($standard-type-scale);
  }
}

.loading {
  padding-right: $grid-gutter-width * 2;
  &::after {
    content: ' \2026';
    text-align: left;
    width: 0;
    overflow-x: hidden;
    display: inline-block;
    position: absolute;
    animation-duration: 0.8s;
    animation-name: loading;
    animation-iteration-count: infinite;
  }
}

.fullWidth {
  width: 100%;
}

.group {
  width: 100%;
  .root {
    vertical-align: top;
    @media only screen and (max-width: 500px) {
      width: 100%;
    }
    &:not(.root_isTransparent) {
      @media #{$mobile} {
        padding-left: $grid-gutter-width * 2;
        padding-right: $grid-gutter-width * 2;
      }
    }
    & + .root {
      margin-left: $grid-gutter-width / 2;
      @media only screen and (max-width: 500px) {
        margin-top: $grid-row-height;
        margin-left: 0;
      }
    }
    & + .root_isTransparent {
      margin-left: $grid-gutter-width * 2;
      @media only screen and (max-width: 500px) {
        margin-left: 0;
      }
    }
  }
}
